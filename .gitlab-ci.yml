image: golang:latest

stages:
  - prebuild
  - build
  - test
  - deploy

# Share cache across all jobs
cache:
  key: gopath
  paths:
    - .gopath

before_script:
  - mkdir -p .gopath/bin
  - export GOPATH=$(pwd)/.gopath
  - export PATH=$GOPATH/bin:$PATH
  - |
    [ "${CI_COMMIT_TAG:-x}" != "x" ] && VER=${CI_COMMIT_TAG}  || VER=${CI_COMMIT_SHORT_SHA}

.build_job_template: &build_job_definition
  stage: build
  artifacts:
    expire_in: 1 week
    paths: 
      - binaries

.os_build_job_template: &os_build_job_definition
  <<: *build_job_definition
  script:
    - declare -A extensions=()
    - extensions["windows"]=".exe"
    - go build -o gql"${extensions[${GOOS}]}" main.go
    - tar zcf gql-${GOOS}-${GOARCH}-${VER}.tar.gz gql
    - mkdir binaries
    - mv gql-${GOOS}-${GOARCH}-${VER}.tar.gz binaries

prebuild:
  stage: prebuild
  script: 
    - go mod download

build:linux:amd64:
  variables:
    GOOS: linux
    GOARCH: amd64
  <<: *os_build_job_definition

build:darwin:amd64:
  variables:
    GOOS: darwin
    GOARCH: amd64
  <<: *os_build_job_definition

build:windows:amd64:
  variables:
    GOOS: windowns
    GOARCH: amd64
  <<: *os_build_job_definition

test:
  stage: test
  script:
    - go test ./...

deploy:
  stage: deploy
  only:
    - tags
  script:
    - go get github.com/aktau/github-release
    - |
      github-release release \
        --user slothking-online \
        --repo gql \
        --tag ${CI_COMMIT_TAG} \
        --name "Release ${CI_COMMIT_TAG}" \
        --description "gql automated release" \
        --pre-release
    - |
      for f in binaries/*; do
        github-release upload \
          --user slothking-online \
          --repo gql \
          --tag ${CI_COMMIT_TAG} \
          --name "$(echo $f | cut -c 10-)" \
          --file $f
      done
