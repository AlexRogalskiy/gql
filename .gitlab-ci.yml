image: golang:latest

stages:
  - build
  - test
  - deploy

# Share cache across all jobs
cache:
  key: gopath
  paths:
    - .gopath

before_script:
  - mkdir -p .gopath/bin
  - export GOPATH=$(pwd)/.gopath
  - export PATH=$GOPATH/bin:$PATH
  - go get github.com/aktau/github-release
build:
  artifacts:
    expire_in: 1 week
    paths: binaries
  stage: build
    - export GOARCH=amd64
    - declare -A extensions=()
    - extensions["windows"]=".exe"
    - [ "${CI_COMMIT_TAG:-x}" != "x" ] && VER=${CI_COMMIT_TAG}  || VER=${CI_COMMIT_SHORT_SHA}
    - [ "${CI_COMMIT_TAG:-x}" != "x" ] && TAG=latest || VER=nightly
    - mkdir binaries
    - |
      for os in linux windows darwin; do
        GOOS=$os go build -o gql"${extensions[${os}]}" main.go
        tar zcf gql-${os}-${GOARCH}-${VER}.tar.gz gql
        tar zcf gql-${os}-${GOARCH}-${TAG}.tar.gz gql
      done
    - mv gql-*.tar.gz binaries

test:
  stage: build
  script:
    - go test ./...

deploy:
  stage: deploy
  only:
    - tags
  script:
    - |
      github-release release \
        --user slothking-online \
        --repo gql \
        --tag ${CI_COMMIT_TAG} \
        --name "Release ${CI_COMMIT_TAG}" \
        --description "gql automated release" \
        --pre-release
    - |
      for f in binaries/*; do
        github-release upload \
          --user slothking-online \
          --repo gql \
          --tag ${CI_COMMIT_TAG} \
          --name "$(echo $f | cut -c 10-)" \
          --file $f
      done